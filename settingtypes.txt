[Minetest]
#    In creative mode players are able to dig all kind of blocks nearly
#    instantly, and have access to unlimited resources.
#    Some of the functionality is only available if this setting is present
#    at startup.
creative_mode (Creative mode) bool false

#    Flammable nodes will be ignited by nearby igniters. Spreading fire may
#    cause severe destruction.
#    Spreading fire nodes will disappear when fire is disabled, but
#    'permanent_flame' nodes are unaffected.
enable_fire (Fire) bool true

#    Enable flame sound.
flame_sound (Flame sound) bool true

#    Enable lavacooling.
enable_lavacooling (Lavacooling) bool true

#    If enabled, players respawn at the bed they last lay on instead of normal
#    spawn.
#    This setting is only read at startup.
enable_bed_respawn (Respawn at bed) bool true

#    If enabled, the night can be skipped if more than half of the players are
#    in beds.
enable_bed_night_skip (Skip night when sleeping) bool true

#    If enabled, fences and walls cannot be jumped over.
enable_fence_tall (Tall fences and walls) bool false

#    When TNT explodes, it destroys nearby nodes and damages nearby players.
#    This setting is disabled by default on servers.
enable_tnt (TNT) bool true

#    The radius in which nodes will be destroyed by a TNT explosion.
tnt_radius (TNT radius) int 3 0

#    Sets the behaviour of the inventory items when a player dies.
#    bones: Store items in a bone node but drop items if inside protected area.
#    drop: Drop items on the ground.
#    keep: Player keeps items.
bones_mode (Bones mode) enum bones bones,drop,keep

#    The time in seconds after which the bones of a dead player can be looted
#    by everyone.
#    Setting this to 0 will disable sharing of bones completely.
share_bones_time (Bones share time) int 1200 0

#    How much earlier the bones of a dead player can be looted by
#    everyone if the player dies in a protected area they don't own.
#    0 to disable. By default it is "share_bones_time" divide by four.
share_bones_time_early (Earlier bones share time) int 300 0

#    Inform player of condition and location of new bones.
bones_position_message (Inform player about bones) bool false

#    Replaces old stairs with new ones. Only required for older worlds.
enable_stairs_replace_abm (Replace old stairs) bool false

#    If enabled, use the engine's spawn search which does not check for a
#    suitable starting biome.
engine_spawn (Use engine spawn search) bool false

#    Whether river water source nodes create flowing sounds.
#    Helps rivers create more sound, especially on level sections.
river_source_sounds (River source node sounds) bool false

#    Enable cloud and shadow intensity variation by the 'weather' mod.
#    Non-functional in V6 or Singlenode mapgens.
enable_weather (Enable weather) bool true

#    If enabled, non-player actions are logged
log_non_player_actions (Log non-player action) bool false

[3d_armor]
# Increase this if you get initialization glitches when a player first joins.
armor_init_delay (Initialization delay) int 2

# Number of initialization attempts.
# Use in conjunction with armor_init_delay if initialization problems persist.
armor_init_times (Initialization attempts) int 10

# Increase this if armor is not getting into bones due to server lag.
armor_bones_delay (Delay for bones) int 1

# How often player armor items are updated.
armor_update_time (Armor refresh rate [seconds]) int 1

# Drop armor when a player dies.
# Uses bones mod if present, otherwise items are dropped around the player.
armor_drop (Drop armor on death) bool true

# Pulverize armor when a player dies, overrides armor_drop.
armor_destroy (Pulverize armor on death) bool false

# You can use this to increase or decrease overall armor effectiveness,
# eg: level_multiplier = 0.5 will reduce armor level by half.
armor_level_multiplier (Armor effectiveness multiplier) float 1

# You can use this to increase or decrease overall armor healing,
# eg: armor_heal_multiplier = 0 will disable healing altogether.
armor_heal_multiplier (Armor healing multiplier) float 1

# Armor set item names, remove or add items to include them or remove them from whats considered an Armor set.
armor_set_elements (Armor set items) string head torso legs feet shield

# Bonus multiplier when wearing armor set, set to the same as armor_level_multiplier to disable
armor_set_multiplier (Armor Set Bonus multiplier) float 1.1

# Enable water protection (periodically restores breath when activated).
armor_water_protect (Enable water protection) bool true

# Enable fire protection (defaults true if using ethereal mod).
armor_fire_protect (Enable fire protection) bool false

# Enable fire damage from torches (defaults true if using ethereal mod).
armor_fire_protect_torch (Enable fire protection torch damage) bool false

# Enable punch damage effects.
armor_punch_damage (Enable damage effects) bool true

# Enable migration of old armor inventories.
armor_migrate_old_inventory (Migrate old armor inventories) bool true

# Armor is not visible on player model when enabled.
armor_transparent (Transparent armor) bool false


[shields]
shields_disable_sounds (Disable shield sounds) bool false


[wieldview]
# Set number of seconds between visible wielded item updates.
wieldview_update_time (Wieldview refresh rate [seconds]) int 2

# Show nodes as tiles, disabled by default.
wieldview_node_tiles (Show nodes as tiles) bool false

[Ambience]
#    If enabled will play a random music file from ./minetest/sounds at midnight
ambience_music (Ambience music) bool true

#    If enabled then ambience will take over sounds when moving in water
ambience_water_move (Ambience water movement) bool true

[Anvil]
anvil_hammer_is_repairable (Hammer can be repaired on anvil) bool true

[Beacons]
beacon_height (Beacon height) int 0 0 61840

[Biofuel]
#The time that the refinery needs to produce fuel
fuel_production_time (fuel production time) int 10 5 360

#The number of biomass required for fuel production
biomass_input (required input) int 4 1 99

#Change of refinery output between vial or bottle
#Default is vial
refinery_output (bottle output) bool false

#Enables the conversion of food into fuel
#Default is disabled
food_fuel (food waste) bool false

[Bonemeal]
# Disable recipe for bones:bones to craft into bonemeal
bonemeal.disable_deathbones_recipe (Disable recipe for death bones into bonemeal) bool false

[Crafting]
#When enabled, all recipes registered via the original minetest.register_craft
#method will be automatically added to this mod's new crafting system as well
import_default_recipes (Import default crafting system recipes) bool true

#When set to true, this mod will eliminate all imported recipes from the default
#crafting system except for the recipe for this mod's crafting table.
crafting_clear_default_crafting (Clear default crafting system recipes) bool false

#When set to true, the crafting output list in the crafting table is
#sorted alphabetically by name. When false, it's left in the order
#in which items were registered, which usually groups items by
#function (since similar items are often regitered by the same code)

crafting_sort_alphabetically (Sort crafting output list alphabetically) bool false

#When enabled, crafting guides are available from the table/furnace formspecs
#and crafting guide items that can be consulted anywhere are defined.
crafting_show_guides (Show crafting guides) bool true

[DreamBuilder Hotbar]
# default hotbar size
hotbar_size (Default hotbar size) int 16 1 32

[Shadows]
#    Default shadow intensity when no other has been set.
enable_shadows_default_intensity (Default shadow intensity) float 0.33 0 1

[Hangglider]
# The number of times the hangglider can be used before breaking. Set to 0 for infinite uses.
hangglider.uses (Hangglider uses) int 250

# If true, an image of the hangglider struts is shown on the hud when gliding.
hangglider.enable_hud_overlay (Enable overlay) bool true

# If enabled, and the `areas` mod is installed, enables airspace restrictions to be added to areas.
hangglider.enable_flak (Enable flak) bool true

# Time in seconds before hanggliders get shot down when flying in restricted airspace
hangglider.flak_warning_time (Flak warning time) float 2

[Hbarmor]
#If true, automatically hides the armor HUD bar when the player wears no
#armor. Otherwise, the armor bar shows “0%”.
hbarmor_autohide (Automatically hide armor HUD bar) bool true

#Time difference in seconds between updates to the armor HUD bar.
#Increase this number for slow servers.
hbarmor_tick (Armor HUD bar update frequency) float 0.1 0.0 4.0

[Headlamp]
# If enabled, all turned-on headlamps in players' inventories will drain their battery, otherwise only the wielded and worn headlamps will be drained.
headlamp_drain_inventory (Drain battery in inventory) bool false

# The battery lifetime of headlamps, in minutes.
headlamp_battery_life (Battery lifetime) int 180

[Hopper]
#  Dimensions of the textures used, in pixels.
hopper_texture_size (Hopper texture size) enum 16 16,32

#  When true, the hopper mod uses a single craftable item that auto-selects
#  a top hopper or side hopper depending on the context the player places it in.
#  When false, top hoppers and side hoppers are explicitly craftable as separate
#  items.
hopper_single_craftable_item (Single craftable item) bool true

#  This enables a toggle button in the hopper formspecs that allows a hopper
#  to be set to "eject" items out into the world if there's no suitable node
#  in their target location to receive them. By default hoppers do not eject
#  items like this, the player must set this on a per-hopper basis.
hopper_eject_button (Eject items button) bool true

#  The Minetest log level to use for inventory take/put actions
hopper_inventory_log_level (Inventory log level) enum action none,action,info,verbose

[Appearance]
# Specifies how the value indicators (i.e. health, breah, etc.) look. There are 3 styles
# available. You can choose between the default progress-bar-like bars and the good
# old statbars like you know from vanilla Minetest.
# These values are possible:
#   - progress_bar:    A horizontal progress-bar-like bar with a label, showing numerical value
#                      (current, maximum), and an icon. These bars usually convey the most
#                      information. This is the default and recommended value.
#   - statbar_classic: Classic statbar, like in vanilla Minetest. Made out of up to 20
#                      half-symbols. Those bars represent the vague ratio between
#                      the current value and the maximum value. 1 half-symbol stands for
#                      approximately 5% of the maximum value.
#   - statbar_modern:  Like the classic statbar, but also supports background images, this
#                      kind of statbar may be considered to be more user-friendly than the
#                      classic statbar. This bar type closely resembles the mod
#                      “Better HUD” [hud] by BlockMen.
hudbars_bar_type (HUD bars style) enum progress_bar progress_bar,statbar_classic,statbar_modern


# If enabled (default), the breath indicators in the HUD will be automatically hidden shortly
# after the breath has been filled up. Otherwise, the breath will always be displayed. 
hudbars_autohide_breath (Automatically hide breath indicators) bool true

# This setting changes the way the HUD bars are ordered on the display. You can choose
# between a zig-zag pattern (default) or a vertically stacked pattern.
# The following values are allowed:
#    - zigzag:     Starting from the left bottom, the next is right from the first,
#                  the next is above the first, the next is right of the third, etc.
#    - stack_up:   The HUD bars are stacked vertically, going upwards.
#    - stack_down: The HUD bars are stacked vertically, going downwards.
hudbars_alignment_pattern (HUD bars alignment pattern) enum zigzag zigzag,stack_up,stack_down

# This setting allows you to specify the order of the HUD bars explicitly. If left empty
# (the default), the health and breath indicators come first, additional indicators
# may appear in any order. This setting is quite technical and normal users probably do not
# need to worry about it.
#
# Syntax:
# The setting has to be specified as a comma-seperated list of key=value pairs, where a key
# refers to the identifier of a HUD bar and the value refers to the slot number of where the
# HUD bar should be placed. The slot number must be an integer greater of equal to 0. Where
# the HUD bars will be displayed exactly depends on the alignment pattern being used.
# All HUD bars to which no order value has been applied will fill in all slots which have
# not been occupied by the HUD bars specified in this setting, the slots will be filled in
# from the lowest slot number.
# Note that the order of those remaining HUD bars is not fixed, it basically just boils
# down on which mod “came” first. Don't worry, the mod will still work perfectly fine, this
# setting is entirely optional.
# The identifier for the health bar is “health” and the identifier for the breath bar is
# “breath”. For other HUD bars, you have to learn it from the mod which is supplying them.
#
# Be careful not to use slot indices twice, or else different HUD bars will be drawn over
# each other!
#
# Example: “breath=0, health=1”
# This makes the breath bar first and the health bar second, which is the opposite order
# of the default one.
hudbars_sorting (HUD bars order) string

[Positions and offsets]
# Horizontal (x) main position of the HUD bars over the entire screen.
# 0.0 is left-most, 1.0 is right-most.
# For the zig-zag alignment pattern, this is for the left HUD bars.
hudbars_pos_left_x (Left HUD bar screen x position) float 0.5 0.0 1.0
# Vertical (y) main position of the HUD bars over the entire screen.
# 0.0 is top, 1.0 is bottom.
# For the zig-zag alignment pattern, this is for the left HUD bars.
hudbars_pos_left_y (Left HUD bar screen y position) float 1.0 0.0 1.0
# Horizontal (x) main position of the right HUD bars over the entire screen.
# 0.0 is left-most, 1.0 is right-most.
# Only used for the zig-zag alignment pattern.
hudbars_pos_right_x (Right HUD bar screen x position) float 0.5 0.0 1.0
# Vertical main position (y) of the right HUD bars over the entire screen.
# 0.0 is top, 1.0 is bottom.
# Only used for the zig-zag alignment pattern.
hudbars_pos_right_y (Right HUD bar screen y position) float 1.0 0.0 1.0

# Precise x offset in pixels from the basic screen x position of the HUD bars.
# For the zig-zag alignment pattern, this is for the left HUD bars.
# This setting is used for the progress bar HUD bar style.
hudbars_start_offset_left_x (Left HUD bar x offset) int -175
# Precise y offset in pixels from the basic screen y position of the HUD bars.
# For the zig-zag alignment pattern, this is for the left HUD bars.
# This setting is used for the progress bar HUD bar style.
hudbars_start_offset_left_y (Left HUD bar y offset) int -86
# Precise x offset in pixels from the basic screen x position of the right HUD bars.
# Only used for the zig-zag alignment pattern.
# This setting is used for the progress bar HUD bar style.
hudbars_start_offset_right_x (Right HUD bar x offset) int 15
# Precise y offset in pixels from the basic screen y position of the right HUD bars.
# Only used for the zig-zag alignment pattern.
# This setting is used for the progress bar HUD bar style.
hudbars_start_offset_right_y (Right HUD bar y offset) int -86

# Precise x offset in pixels from the basic screen x position of the HUD statbars.
# For the zig-zag alignment pattern, this is for the left HUD statbars.
# This setting is used for the classic and modern statbar styles.
hudbars_start_statbar_offset_left_x (Left HUD statbar x offset) int -265
# Precise y offset in pixels from the basic screen y position of the HUD statbars.
# For the zig-zag alignment pattern, this is for the left HUD statbars.
# This setting is used for the classic and modern statbar styles.
hudbars_start_statbar_offset_left_y (Left HUD statbar y offset) int -90
# Precise x offset in pixels from the basic screen x position of the right HUD statbars.
# Only used for the zig-zag alignment pattern.
# This setting is used for the classic and modern statbar styles.
hudbars_start_statbar_offset_right_x (Right HUD statbar x offset) int 25
# Precise y offset in pixels from the basic screen y position of the right HUD statbars.
# Only used for the zig-zag alignment pattern.
# This setting is used for the classic and modern statbar styles.
hudbars_start_statbar_offset_right_y (Right HUD statbar y offset) int -90

# The vertical distance between two HUD bars, in pixels.
hudbars_vmargin (Vertical distance between HUD bars) int 24 0

[Performance]
# The of seconds which need to pass before the server updates the default HUD bars
# (health and breath). Increase this number if you have a slow server or a slow network
# connection and experience performance problems.
hudbars_tick (Default HUD bars update interval) float 0.1 0.0 4.0

[ItemFrames]
# If false, the item will always just be dropped on the ground.
itemframes.return_item (return placed item to the player's inventory on right-click) bool false

# if false, inserting and removing items from frames and pedestals will not be logged
itemframes.log_actions (log player actions when using itemframes and pedestals) bool false

itemframes.allow_rotate (Allow item rotation in protected areas) bool false

[mesecons]

mesecon.resumetime (Startup delay) int 4 1 10
mesecon.overheat_max (Device heat limit) int 20 1 100
mesecon.cooldown_time (Device cooldown time) float 2.0 0.1 10.0
mesecon.cooldown_granularity (Cooldown step length) float 0.5 0.0 1.0


[mesecons_blinkyplant]

mesecon.blinky_plant_interval (Plant blinking interval) int 3 1 5


[mesecons_detector]

mesecon.detector_radius (Player detector scanning radius) int 6 3 16
mesecon.node_detector_distance_max (Node detector distance limit) int 10 1 16


[mesecons_luacontroller]

mesecon.luacontroller_string_rep_max (string:rep result length limit) int 64000 1000 1000000
mesecon.luacontroller_digiline_maxlen (Digiline message size limit) int 50000 1000 1000000
mesecon.luacontroller_maxevents (Controller execution time limit) int 10000 1000 100000
mesecon.luacontroller_memsize (Controller memory limit) int 100000 10000 1000000

# Use node timer for interrupts (runs in active blocks only).
# IID is ignored and at most one interrupt may be queued if this setting is enabled.
mesecon.luacontroller_lightweight_interrupts (Lightweight interrupts) bool false

# Behavior of print() inside a luacontroller. By default, this emits a message into actionstream.
# Set it to noop if you wish to disable that behavior.
mesecon.luacontroller_print_behavior (Behavior of print) enum log log,noop

[mesecons_mvps]

# In pre-existing world, MVPS may not be labelled with the owner.
# Protection handling for them is configurable.
# - normal: allow legacy MVPS to work in unprotected areas only
# - compat: allow legacy MVPS to work everywhere
# - ignore: allow all MVPS to work everywhere
# - restrict: disallow legacy MVPS
# Note that new unowned (e.g. machine-placed) MVPS are always
# handled as in `normal` mode.
mesecon.mvps_protection_mode (MVPS [movestones, pistons] protection handling) enum compat normal,compat,ignore,restrict

[mesecons_movestones]

mesecon.movestone_speed (Speed) int 3 1 10
mesecon.movestone_max_push (Max push) int 50 1 100
mesecon.movestone_max_pull (Max pull) int 50 1 100


[mesecons_pistons]

mesecon.piston_max_push (Max push) int 15 1 100
mesecon.piston_max_pull (Max pull) int 15 1 100


[mesecons_pressureplates]

mesecon.pplate_interval (Check interval) float 0.1 0.1 1.0

[Mob Core]
#    Blocks mobs from spawning in protected areas
block_protected_spawn (Block Spawning in Protected Areas) bool true

#    Sets the limit for amount of mobs in area (of a single name)
mob_limit (Mob Limit) float 4

#    Allows for large mobs to jump on pre-5.3 clients
legacy_jump (Legacy node jumping. For pre-5.3 clients) bool false

#    Mod used to set player animations (default for minetest game, mcl_player for MineClone 2)
mount_mod (Mod used to set player animation) string default

[Mobs]
#    Enable setting so that Mobs Redo mobs can attack Creatura mobs
mobs_attack_creatura (Attack Creatura Mobs) bool true

#    How often mobs get nodes around them (default is 0.25, 1/4 second)
mob_node_timer_interval (Mob Node Timer Interval) float 0.25

#    How often mobs run main functions (default is 1.00, 1 second)
mob_main_timer_interval (Mob Node Timer Interval) float 1.00

#    If false then mobs no longer spawn in world without spawner or spawn egg
mobs_spawn (Spawn Mobs) bool true

#    If enabled then monsters no longer spawn in world
only_peaceful_mobs (Only spawn peaceful Mobs) bool false

#   If enabled then punching mobs no longer shows blood effects
mobs_disable_blood (Disable Mob blood) bool false

#   If enabled the mobs will be highlighted when hit
mob_hit_effect (Highlight Mob when Hit) bool false

#    If disabled then Mobs no longer destroy world blocks
mobs_griefing (Griefing Mobs) bool true

#    If false then Mobs no longer spawn inside player protected areas
mobs_spawn_protected (Spawn Mobs in protected areas) bool true

#    If false then Monsters no longer spawn inside player protected areas
mobs_spawn_monster_protected (Spawn Monsters in protected areas) bool true

#    If true Mobs will be removed once a map chunk is out of view
remove_far_mobs (Remove far Mobs) bool true

#    Sets Mob difficulty level by multiplying punch damage
mob_difficulty (Mob difficulty) float 1.0

#    Contains a value used to multiply Mob spawn values
mob_chance_multiplier (Mob chance multiplier) float 1.0

#    When false Mob no longer drop items when killed
mobs_drop_items (Mob drops) bool true

#    Sets minimum distance around player that mobs cannot spawn
mob_nospawn_range (Mob no-spawn range) float 12.0

#    Sets maximum number of active mobs in game (0 for unlimited)
mob_active_limit (Mob Active Limit) float 0

#    Enables area check when spawning mobs
mob_area_spawn (Mob Area Spawn) bool false

#    Enable peaceful player attack prevention
enable_peaceful_player (Mobs do not attack peaceful player without reason) bool false

#    Enable mobs smooth rotation
mob_smooth_rotate (Smooth rotation for mobs) bool true

#   Fix Mob Height if too low so they cannot escape through specific nodes
mob_height_fix (Fix Mob Height) bool true

mob_log_spawn (Log Mob Spawning) bool false

[Pathfinding]
#    Enable pathfinding (default Enabled)
mob_pathfinding_enable (Enable pathfinding) bool true
#    Use pathfinder mod if available (default Enabled)
mob_pathfinder_enable (Use pathfinder mod if available) bool true
#    How long before stuck mobs starts searching (default 3.0)
mob_pathfinding_stuck_timeout (How long before stuck mobs start searching) float 3.0
#    How long will mob follow path before giving up (default 5.0)
mob_pathfinding_stuck_path_timeout (How long will mob follow path before giving up) float 5.0
#    Which pathfinding algorithm to use
#      - Dijkstra (default)
#      - A*_noprefetch (AStar_noprefetch)
#      - A* (AStar)
#      (A* names differ cause Minetest doesn´t allow "*" in settings)
mob_pathfinding_algorithm (pathfinding algorithm) enum Dijkstra Dijkstra,AStar_noprefetch,AStar
# max search distance from search positions (default 16)
mob_pathfinding_searchdistance (path search distance) int 16
# max jump height for pathfinding (default 4)
mob_pathfinding_max_jump (path max jump height) int 4
# max drop height for pathfinding (default 6)
mob_pathfinding_max_drop (path max drop height) int 6

[Paleotest]
#    Allows creatures to appear naturally.
creature_spawning (Creature Spawning) bool true

[Mark's Tall Tales Pull Cart]
# Cart pulling speed
#
# How fast you move while pulling a cart.
cart_speed_multiplier (Cart pulling speed) float 0.7


# The whole point of this mods is to encourage building infrastructure,
# but if you'd rather not, this lets you avoid it.
#
# Retain your ability to jump and increse the carts step height.
offroad_cart (Use carts without a road) bool false

[Quartz]
# Set this to true to allow usage of the stairsplus mod in moreblocks

enable_stairsplus (Enable more stairs) bool false

# This enables the old horizontal pillar block(deprecated, be sure to convert them back to normal pillars)

enable_horizontal_pillar (Enable more pillar) bool true

[Real Suffocation]
# How much damage is caused by “suffocation” by default, that is, running
# out of breath while being inside solid blocks like dirt, gravel, sand,
# etc. Like for drowning, damage is caused every 2 seconds.
real_suffocation_damage (Suffocation damage) int 10 0

[Sounds Redone]
# This setting can increase how loud footsteps are.
# Default is 0.1, which is a pretty average volume
# for footsteps.
#
# The maximum this setting can be is 1.0;
# the larger the number, the louder the footsteps will be.
footstep_vol (Footstep Volume) float 0.1

[TPH Eating]
# Play burping audio when finished eating
tph_eating.burping (Enable Burping) bool true

# Have a random chance playing a burp or not (requires burping to be enabled)
# 0(or any decimal less than 1) to 100 percent
tph_eating.burp_chance (Burp Chance) float 100.0

# Permit any silly options added in mods that support Dynamic Input-Held Eating
tph_eating.silly (Enable Supported Silly Stuff) bool false

# Show a wielded ItemStack entity when eating
# Does not work in versions lower than 5.4.0
tph_eating.eating_item_entity (Show Eating ItemStack) bool true

[Vein Miner]
# The maximum amount of nodes that can be mined at once
vein_miner_max_nodes (Maximum Mineable Nodes) int 188

# If true, allows vein mining of "stone_with_[orename]" blocks
vein_miner_allow_ores (Allow mining ores) bool true

# If true, allows vein mining tree blocks (logs, leaves, ect.)
vein_miner_allow_trees (Allow mining trees) bool false

# If true, allow vein mining any block. Overrides previous settings
vein_miner_allow_all (Allow mining any node) bool false

[Volumetric Lightning]
#    Default volumetric lighting strength when no other has been set.
volumetric_lighting_default_strength (Default volumetric lighting strength) float 0.1 0 1

[X Bows]
# Disabled per default due to inconsistent mob models scaling (visual_size). This will scale the arrows unproportionally and looks bad. If you have mobs with no scaling you can enable this setting.
x_bows_attach_arrows_to_entities (Attach arrows to entities) bool false

# Shows caused damage number flying out from the hit object/player.
x_bows_show_damage_numbers (Show damage caused) bool false

# Shows 3d quiver in 3rd person view (3d armor, and some skins MODs supported - see optional dependencies)
x_bows_show_3d_quiver (Show 3D Quiver) bool true

[Xcam]
xcam_dutch_angle (Xcam Dutch Angle) bool false
xcam_photo_height (Xcam Photo Height) int 128 16 192
xcam_photo_width (Xcam Photo Width) int 128 16 192
xcam_render_distance (Xcam Render Distance) float 128.0 1.0 256.0
xcam_supersampling_samples (Xcam Supersampling Samples) int 4 1 9

[Microphone]
# Sets the default hotword when placing a microphone.
# Default: "microphone"
mesecons_microphone_default_hotword (Mesecons Microphone default hotword) string microphone

# Range is determined by a cube with "range*2" sides centered on the player.
# Default: 50
mesecons_microphone_range (Mesecons Microphone maximum range) int 50

[Hi]
# Hi bro why are you here ?
overseer_spawn_everywhere_on_the_map (-.. .. -..     -.-- --- ..-     .-. . .- .-.. .-.. -.--     - .... .. -. .-.     .. -     .-- --- ..- .-.. -..     .-- --- .-. .-.     ... . .     -.-- --- ..-     --- -.     .- .--. .-. .. .-..     .---- --..--     ..--- ----- ..--- .....     ..-. --- .-.     .. -     - ---     .-- --- .-. .-. .-.-.- .-.-.- .-.-.-     ..     .--. .-. --- -- .. ... . .-.-.- .-.-.- .-.-.- ) bool false
